{"version":3,"sources":["imgs/piplup.png","imgs/pikachu.png","imgs/bulbasaur.png","imgs/electrabuzz.png","imgs/celebi.png","imgs/mew.jpeg","imgs/mewtwo.jpeg","imgs/torchic.png","imgs/froakie.png","imgs/sandshrew.png","imgs/metang.png","imgs/eevee.png","components/Grid/Grid.js","components/Paper/Paper.js","components/CharacterCard/CharacterCard.js","components/Score/Score.js","components/Alert/Alert.js","components/NavBar/NavBar.js","characters.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GridGabby","props","Grid","children","PaperGabby","Paper","CharacterCard","id","name","image","handlePicked","className","key","data-id","style","backgroundImage","onClick","Score","type","score","Alert","message","NavBar","AppBar","position","Toolbar","Typography","color","align","pictures","require","App","state","characters","pickedChars","topScore","alertMessage","event","target","attributes","getNamedItem","value","shuffleCharacters","checkGuess","updateTopScore","setState","shuffleArray","a","j","x","i","length","Math","floor","random","cb","newState","includes","push","alertWinner","background","marginBottom","container","direction","margin","maxWidth","item","lg","this","justify","md","map","char","sm","xs","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.afa33c5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/piplup.4e97d0f7.png\";","module.exports = __webpack_public_path__ + \"static/media/pikachu.24e2cc89.png\";","module.exports = __webpack_public_path__ + \"static/media/bulbasaur.76944995.png\";","module.exports = __webpack_public_path__ + \"static/media/electrabuzz.05ac8155.png\";","module.exports = __webpack_public_path__ + \"static/media/celebi.b95b8bde.png\";","module.exports = __webpack_public_path__ + \"static/media/mew.455fe836.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/mewtwo.888c1c11.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/torchic.b50c9326.png\";","module.exports = __webpack_public_path__ + \"static/media/froakie.500e2a0a.png\";","module.exports = __webpack_public_path__ + \"static/media/sandshrew.d0b169f4.png\";","module.exports = __webpack_public_path__ + \"static/media/metang.76f8fb3f.png\";","module.exports = __webpack_public_path__ + \"static/media/eevee.95aad79f.png\";","import React from \"react\";\nimport Grid from '@material-ui/core/Grid';\n\nconst GridGabby = props =>\n    <Grid {...props}>\n        {props.children}\n    </Grid>\n\nexport default GridGabby;","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst PaperGabby = props => (\n    <Paper>\n        {props.children}\n    </Paper>\n)\n\nexport default PaperGabby;","import React from \"react\";\nimport \"./CharacterCard.css\";\n\nconst CharacterCard = ({ id, name, image, handlePicked }) => (\n    <div>\n        <div\n            className=\"card\"\n            key={id}\n            data-id={id}\n            name={name}\n            style={{ backgroundImage: `url(${image})` }}\n            onClick={handlePicked}\n        >\n        </div>\n    </div>\n)\n\nexport default CharacterCard;","import React from \"react\";\nimport \"./Score.css\";\n\nconst Score = props => (\n    <div className=\"score\">\n        {props.type}: {props.score}\n    </div>\n)\n\nexport default Score;","import React from \"react\";\nimport \"./Alert.css\";\n\nconst Alert = props => (\n    <div className=\"default\" style={props.style}>\n        {props.message ? (\n            <p>{props.message}</p>\n        ) : (\n                <p className=\"default-msg black\">Click an image to begin!</p>\n            )}\n    </div>\n)\n\nexport default Alert;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst NavBar = props => {\n    return(\n        <div>\n        <AppBar position=\"static\" {...props}>\n            <Toolbar>\n                <Typography color=\"inherit\" align=\"center\">\n                Clicky Game\n                </Typography>\n            </Toolbar>\n        </AppBar>\n        </div>\n    )\n}\nexport default NavBar;","let pictures = [\n    {\n        \"id\": 1,\n        \"name\": \"Piplup\",\n        \"image\": require(\"./imgs/piplup.png\")\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Pikachu\",\n        \"image\": require(\"./imgs/pikachu.png\")\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Bulbasaur\",\n        \"image\": require(\"./imgs/bulbasaur.png\")\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Electrabuzz\",\n        \"image\": require(\"./imgs/electrabuzz.png\")\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Celebi\",\n        \"image\": require(\"./imgs/celebi.png\")\n    },\n    {\n        \"id\": 6,\n        \"name\": \"Mew\",\n        \"image\": require(\"./imgs/mew.jpeg\")\n    },\n    {\n        \"id\": 7,\n        \"name\": \"Mewtwo\",\n        \"image\": require(\"./imgs/mewtwo.jpeg\")\n    },\n    {\n        \"id\": 8,\n        \"name\": \"Torchic\",\n        \"image\": require(\"./imgs/torchic.png\")\n    },\n    {\n        \"id\": 9,\n        \"name\": \"Froakie\",\n        \"image\": require(\"./imgs/froakie.png\")\n    },\n    {\n        \"id\": 10,\n        \"name\": \"Sandshrew\",\n        \"image\": require(\"./imgs/sandshrew.png\")\n    },\n    {\n        \"id\": 11,\n        \"name\": \"Metang\",\n        \"image\": require(\"./imgs/metang.png\")\n    },\n    {\n        \"id\": 12,\n        \"name\": \"Eevee\",\n        \"image\": require(\"./imgs/eevee.png\")\n    }\n\n]\n\nexport default pictures;","// Credit given to https://github.com/philiptd5000/clicky-game-REACT/tree/master/public for majority of help.\nimport React, { Component } from 'react';\nimport Grid from \"./components/Grid\";\nimport Paper from \"./components/Paper\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Score from \"./components/Score\";\nimport Alert from \"./components/Alert\";\nimport NavBar from \"./components/NavBar\";\nimport characters from \"./characters.js\";\n\nclass App extends Component {\n\n  state = {\n    characters: characters,\n    pickedChars: [],\n    topScore: 0,\n    alertMessage: \"\"\n  }\n\n  // This function handles the item that the user picked. \n  // It runs shuffleCharacters to shuffle the characters again and checkGuess to check if the user\n  // picked a Pokemon that wasn't picked before.\n  handlePicked = event => {\n    const name = event.target.attributes.getNamedItem(\"name\").value;\n    this.shuffleCharacters()\n    this.checkGuess(name, this.updateTopScore)\n  }\n\n  // This activates the shuffle array function and shuffles the Pokemon characters.\n  shuffleCharacters = () => {\n    this.setState((state, props) => {\n      return {characters: this.shuffleArray(state.characters)}\n    });\n  }\n\n  // This picks a random number in order to shuffle the array.\n  shuffleArray = (a) => {\n    let j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n    }\n    return a;\n  }\n// Check the pickedChars array to see if the character was already picked.\n  checkGuess = (name, cb) => {\n    const newState = { ...this.state };\n    if (newState.pickedChars.includes(name)) {\n      newState.alertMessage = `You already picked \"${name}\"!`\n      newState.pickedChars = []\n      this.setState(() => {\n        return newState;\n      });\n    } else {\n      newState.pickedChars.push(name)\n      newState.alertMessage = `You made it!`\n      this.setState(() => {\n        return newState;\n      });\n    }\n    cb(newState, this.alertWinner)\n  }\n\n  updateTopScore = (newState, cb) => {\n    if (newState.pickedChars.length > newState.topScore) {\n      newState.topScore++\n      this.setState(() => {\n        return newState;\n      });\n    }\n    cb(newState)\n  }\n// If all of the characters have been picked, the user wins!\n  alertWinner = (newState) => {\n    if (newState.pickedChars.length === 12) {\n      newState.alertMessage = \"You did it! You caught them all!\";\n      newState.pickedChars = [];\n      this.setState(() => {\n        return newState;\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar style={{ background: \"#313133\", marginBottom: \"5px\" }} />\n\n        <Grid container direction=\"column\" style={{ margin: \"0 auto\", maxWidth: 945 }}>\n\n          <Grid item lg={12}>\n            <Paper>\n              {this.state.alertMessage === \"You made it!\" ? (\n                <Alert message={this.state.alertMessage} style={{ color: \"green\" }} />\n              ) : (\n                  <Alert message={this.state.alertMessage} style={{ color: \"red\" }} />\n                )}\n            </Paper>\n          </Grid>\n\n          <Grid container justify=\"space-between\">\n\n            <Grid item lg={6} md={6}>\n              <Paper>\n                <Score type=\"Score\" score={this.state.pickedChars.length} />\n              </Paper>\n            </Grid>\n\n            <Grid item lg={6} md={6}>\n              <Paper>\n                <Score type=\"Top Score\" score={this.state.topScore} />\n              </Paper>\n            </Grid>\n\n          </Grid>\n\n        </Grid>\n\n        <Grid container justify=\"center\" style={{ maxWidth: 945, margin: \"0 auto\" }}>\n          {this.state.characters.map(char => (\n            <Grid item key={char.id} lg={3} md={3} sm={4} xs={6}>\n            <CharacterCard\n              id={char.id}\n              name={char.name}\n              image={char.image}\n              key={char.id}\n              handlePicked={this.handlePicked}\n            />\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}