{"ast":null,"code":"var _jsxFileName = \"/Users/itaquattrone/Desktop/ucd-bootcamp/clicky-game/clicky-game/src/App.js\";\nimport React, { Component } from 'react';\nimport GridMDC from \"./components/GridMDC\";\nimport PaperMDC from \"./components/PaperMDC\";\nimport CharCard from \"./components/CharCard\";\nimport Score from \"./components/Score\";\nimport Alert from \"./components/Alert\";\nimport NavBar from \"./components/NavBar\";\nimport BottomNavMDC from \"./components/BottomNavMDC\";\nimport characters from \"./characters.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characters: characters,\n      pickedChars: [],\n      topScore: 0,\n      alertMessage: \"\"\n    };\n\n    this.handlePicked = event => {\n      const name = event.target.attributes.getNamedItem(\"name\").value;\n      this.shuffleCharacters();\n      this.checkGuess(name, this.updateTopScore);\n    };\n\n    this.shuffleCharacters = () => {\n      this.setState(this.state.characters = this.shuffleArray(this.state.characters));\n    };\n\n    this.shuffleArray = a => {\n      var j, x, i;\n\n      for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n      }\n\n      return a;\n    };\n\n    this.checkGuess = (name, cb) => {\n      const newState = { ...this.state\n      };\n\n      if (newState.pickedChars.includes(name)) {\n        newState.alertMessage = `YOU ALREADY PICKED \"${name.toUpperCase()}\"!`;\n        newState.pickedChars = [];\n        this.setState(this.state = newState);\n      } else {\n        newState.pickedChars.push(name);\n        newState.alertMessage = `GOOD CHOICE!`;\n        this.setState(this.state = newState);\n      }\n\n      cb(newState, this.alertWinner);\n    };\n\n    this.updateTopScore = (newState, cb) => {\n      if (newState.pickedChars.length > newState.topScore) {\n        newState.topScore++;\n        this.setState(this.state = newState);\n      }\n\n      cb(newState);\n    };\n\n    this.alertWinner = newState => {\n      if (newState.pickedChars.length === 12) {\n        newState.alertMessage = \"CHAMPION!\";\n        newState.pickedChars = [];\n        this.setState(this.state = newState);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      style: {\n        background: \"#313133\",\n        marginBottom: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(GridMDC, {\n      container: true,\n      direction: \"column\",\n      style: {\n        margin: \"0 auto\",\n        maxWidth: 945\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(GridMDC, {\n      item: true,\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(PaperMDC, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.alertMessage === \"GOOD CHOICE!\" ? React.createElement(Alert, {\n      message: this.state.alertMessage,\n      style: {\n        color: \"green\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }) : React.createElement(Alert, {\n      message: this.state.alertMessage,\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))), React.createElement(GridMDC, {\n      container: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(GridMDC, {\n      item: true,\n      lg: 6,\n      md: 6,\n      sm: 12,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(PaperMDC, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Score, {\n      type: \"Score\",\n      score: this.state.pickedChars.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(GridMDC, {\n      item: true,\n      lg: 6,\n      md: 6,\n      sm: 12,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(PaperMDC, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Score, {\n      type: \"Top Score\",\n      score: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))))), React.createElement(GridMDC, {\n      container: true,\n      spacing: 24,\n      justify: \"center\",\n      style: {\n        maxWidth: 945,\n        margin: \"0 auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.characters.map(char => React.createElement(GridMDC, {\n      item: true,\n      lg: 3,\n      md: 3,\n      sm: 4,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(CharCard, {\n      id: char.id,\n      name: char.name,\n      image: char.image,\n      key: char.id,\n      handlePicked: this.handlePicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })))), React.createElement(BottomNavMDC, {\n      style: {\n        background: \"#313133\",\n        marginTop: \"17.5px\",\n        paddingTop: \"15px\",\n        borderTop: \"2.5px solid slategray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://github.com/philiptd5000/clicky-game-REACT\",\n      target: \"_blank\",\n      className: \"link\",\n      alt: \"clicky-game-github-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-github fa-2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/itaquattrone/Desktop/ucd-bootcamp/clicky-game/clicky-game/src/App.js"],"names":["React","Component","GridMDC","PaperMDC","CharCard","Score","Alert","NavBar","BottomNavMDC","characters","App","state","pickedChars","topScore","alertMessage","handlePicked","event","name","target","attributes","getNamedItem","value","shuffleCharacters","checkGuess","updateTopScore","setState","shuffleArray","a","j","x","i","length","Math","floor","random","cb","newState","includes","toUpperCase","push","alertWinner","render","background","marginBottom","margin","maxWidth","color","map","char","id","image","marginTop","paddingTop","borderTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GridMDC from \"./components/GridMDC\";\nimport PaperMDC from \"./components/PaperMDC\";\nimport CharCard from \"./components/CharCard\";\nimport Score from \"./components/Score\";\nimport Alert from \"./components/Alert\";\nimport NavBar from \"./components/NavBar\";\nimport BottomNavMDC from \"./components/BottomNavMDC\";\nimport characters from \"./characters.json\";\n\nclass App extends Component {\n\n  state = {\n    characters: characters,\n    pickedChars: [],\n    topScore: 0,\n    alertMessage: \"\"\n  }\n\n  handlePicked = event => {\n\n    const name = event.target.attributes.getNamedItem(\"name\").value;\n    this.shuffleCharacters()\n    this.checkGuess(name, this.updateTopScore)\n  }\n\n  shuffleCharacters = () => {\n    this.setState(this.state.characters = this.shuffleArray(this.state.characters))\n  }\n\n  shuffleArray = (a) => {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n    }\n    return a;\n  }\n\n  checkGuess = (name, cb) => {\n    const newState = { ...this.state };\n    if (newState.pickedChars.includes(name)) {\n      newState.alertMessage = `YOU ALREADY PICKED \"${name.toUpperCase()}\"!`\n      newState.pickedChars = []\n      this.setState(this.state = newState)\n    } else {\n      newState.pickedChars.push(name)\n      newState.alertMessage = `GOOD CHOICE!`\n      this.setState(this.state = newState)\n    }\n    cb(newState, this.alertWinner)\n  }\n\n  updateTopScore = (newState, cb) => {\n    if (newState.pickedChars.length > newState.topScore) {\n      newState.topScore++\n      this.setState(this.state = newState)\n    }\n    cb(newState)\n  }\n\n  alertWinner = (newState) => {\n    if (newState.pickedChars.length === 12) {\n      newState.alertMessage = \"CHAMPION!\";\n      newState.pickedChars = [];\n      this.setState(this.state = newState)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar style={{ background: \"#313133\", marginBottom: \"5px\" }} />\n\n        <GridMDC container direction=\"column\" style={{ margin: \"0 auto\", maxWidth: 945 }}>\n\n          <GridMDC item lg={12}>\n            <PaperMDC>\n              {this.state.alertMessage === \"GOOD CHOICE!\" ? (\n                <Alert message={this.state.alertMessage} style={{ color: \"green\" }} />\n              ) : (\n                  <Alert message={this.state.alertMessage} style={{ color: \"red\" }} />\n                )}\n            </PaperMDC>\n          </GridMDC>\n\n          <GridMDC container justify=\"space-between\">\n\n            <GridMDC item lg={6} md={6} sm={12} xs={12}>\n              <PaperMDC>\n                <Score type=\"Score\" score={this.state.pickedChars.length} />\n              </PaperMDC>\n            </GridMDC>\n\n            <GridMDC item lg={6} md={6} sm={12} xs={12}>\n              <PaperMDC>\n                <Score type=\"Top Score\" score={this.state.topScore} />\n              </PaperMDC>\n            </GridMDC>\n\n          </GridMDC>\n\n        </GridMDC>\n\n        <GridMDC container spacing={24} justify=\"center\" style={{ maxWidth: 945, margin: \"0 auto\" }}>\n          {this.state.characters.map(char => (\n            <GridMDC item lg={3} md={3} sm={4} xs={6}>\n            <CharCard\n              id={char.id}\n              name={char.name}\n              image={char.image}\n              key={char.id}\n              handlePicked={this.handlePicked}\n            />\n            </GridMDC>\n          ))}\n        </GridMDC>\n        <BottomNavMDC style={{ background: \"#313133\", marginTop: \"17.5px\", paddingTop: \"15px\", borderTop: \"2.5px solid slategray\" }}>\n          <a href=\"https://github.com/philiptd5000/clicky-game-REACT\" target=\"_blank\" className=\"link\" alt=\"clicky-game-github-link\"><i className=\"fa fa-github fa-2x\"></i></a>\n        </BottomNavMDC>\n\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}