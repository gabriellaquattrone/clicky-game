{"ast":null,"code":"import _objectSpread from\"/Users/itaquattrone/Desktop/ucd-bootcamp/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/itaquattrone/Desktop/ucd-bootcamp/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/itaquattrone/Desktop/ucd-bootcamp/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/itaquattrone/Desktop/ucd-bootcamp/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/itaquattrone/Desktop/ucd-bootcamp/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/itaquattrone/Desktop/ucd-bootcamp/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";// Credit given to https://github.com/philiptd5000/clicky-game-REACT/tree/master/public for majority of help.\nimport React,{Component}from'react';import Grid from\"./components/Grid\";import Paper from\"./components/Paper\";import CharacterCard from\"./components/CharacterCard\";import Score from\"./components/Score\";import Alert from\"./components/Alert\";import NavBar from\"./components/NavBar\";import characters from\"./characters.json\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={characters:characters,pickedChars:[],topScore:0,alertMessage:\"\"};_this.handlePicked=function(event){var name=event.target.attributes.getNamedItem(\"name\").value;_this.shuffleCharacters();_this.checkGuess(name,_this.updateTopScore);};_this.shuffleCharacters=function(){_this.setState(function(state,props){return{characters:_this.shuffleArray(state.characters)};});};_this.shuffleArray=function(a){var j,x,i;for(i=a.length-1;i>0;i--){j=Math.floor(Math.random()*(i+1));x=a[i];a[i]=a[j];a[j]=x;}return a;};_this.checkGuess=function(name,cb){var newState=_objectSpread({},_this.state);if(newState.pickedChars.includes(name)){newState.alertMessage=\"You already picked \\\"\".concat(name,\"\\\"!\");newState.pickedChars=[];_this.setState(function(){return newState;});}else{newState.pickedChars.push(name);newState.alertMessage=\"You made it!\";_this.setState(function(){return newState;});}cb(newState,_this.alertWinner);};_this.updateTopScore=function(newState,cb){if(newState.pickedChars.length>newState.topScore){newState.topScore++;_this.setState(function(){return newState;});}cb(newState);};_this.alertWinner=function(newState){if(newState.pickedChars.length===12){newState.alertMessage=\"You did it! You caught them all!\";newState.pickedChars=[];_this.setState(function(){return newState;});}};return _this;}_createClass(App,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(NavBar,{style:{background:\"#313133\",marginBottom:\"5px\"}}),React.createElement(Grid,{container:true,direction:\"column\",style:{margin:\"0 auto\",maxWidth:945}},React.createElement(Grid,{item:true,lg:12},React.createElement(Paper,null,this.state.alertMessage===\"You made it!\"?React.createElement(Alert,{message:this.state.alertMessage,style:{color:\"green\"}}):React.createElement(Alert,{message:this.state.alertMessage,style:{color:\"red\"}}))),React.createElement(Grid,{container:true,justify:\"space-between\"},React.createElement(Grid,{item:true,lg:6,md:6},React.createElement(Paper,null,React.createElement(Score,{type:\"Score\",score:this.state.pickedChars.length}))),React.createElement(Grid,{item:true,lg:6,md:6},React.createElement(Paper,null,React.createElement(Score,{type:\"Top Score\",score:this.state.topScore}))))),React.createElement(Grid,{container:true,spacing:24,justify:\"center\",style:{maxWidth:945,margin:\"0 auto\"}},this.state.characters.map(function(char){return React.createElement(Grid,{item:true,lg:3,md:3,sm:4,xs:6},React.createElement(CharacterCard,{id:char.id,name:char.name,image:char.image,key:char.id,handlePicked:_this2.handlePicked}));})));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/itaquattrone/Desktop/ucd-bootcamp/clicky-game/clicky-game/src/App.js"],"names":["React","Component","Grid","Paper","CharacterCard","Score","Alert","NavBar","characters","App","state","pickedChars","topScore","alertMessage","handlePicked","event","name","target","attributes","getNamedItem","value","shuffleCharacters","checkGuess","updateTopScore","setState","props","shuffleArray","a","j","x","i","length","Math","floor","random","cb","newState","includes","push","alertWinner","background","marginBottom","margin","maxWidth","color","map","char","id","image"],"mappings":"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","sourcesContent":["// Credit given to https://github.com/philiptd5000/clicky-game-REACT/tree/master/public for majority of help.\nimport React, { Component } from 'react';\nimport Grid from \"./components/Grid\";\nimport Paper from \"./components/Paper\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Score from \"./components/Score\";\nimport Alert from \"./components/Alert\";\nimport NavBar from \"./components/NavBar\";\nimport characters from \"./characters.json\";\n\nclass App extends Component {\n\n  state = {\n    characters: characters,\n    pickedChars: [],\n    topScore: 0,\n    alertMessage: \"\"\n  }\n\n  // This function handles the item that the user picked. \n  // It runs shuffleCharacters to shuffle the characters again and checkGuess to check if the user\n  // picked a Pokemon that wasn't picked before.\n  handlePicked = event => {\n    const name = event.target.attributes.getNamedItem(\"name\").value;\n    this.shuffleCharacters()\n    this.checkGuess(name, this.updateTopScore)\n  }\n\n  // This activates the shuffle array function and shuffles the Pokemon characters.\n  shuffleCharacters = () => {\n    this.setState((state, props) => {\n      return {characters: this.shuffleArray(state.characters)}\n    });\n  }\n\n  // This picks a random number in order to shuffle the array.\n  shuffleArray = (a) => {\n    let j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n    }\n    return a;\n  }\n// Check the pickedChars array to see if the character was already picked.\n  checkGuess = (name, cb) => {\n    const newState = { ...this.state };\n    if (newState.pickedChars.includes(name)) {\n      newState.alertMessage = `You already picked \"${name}\"!`\n      newState.pickedChars = []\n      this.setState(() => {\n        return newState;\n      });\n    } else {\n      newState.pickedChars.push(name)\n      newState.alertMessage = `You made it!`\n      this.setState(() => {\n        return newState;\n      });\n    }\n    cb(newState, this.alertWinner)\n  }\n\n  updateTopScore = (newState, cb) => {\n    if (newState.pickedChars.length > newState.topScore) {\n      newState.topScore++\n      this.setState(() => {\n        return newState;\n      });\n    }\n    cb(newState)\n  }\n// If all of the characters have been picked, the user wins!\n  alertWinner = (newState) => {\n    if (newState.pickedChars.length === 12) {\n      newState.alertMessage = \"You did it! You caught them all!\";\n      newState.pickedChars = [];\n      this.setState(() => {\n        return newState;\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar style={{ background: \"#313133\", marginBottom: \"5px\" }} />\n\n        <Grid container direction=\"column\" style={{ margin: \"0 auto\", maxWidth: 945 }}>\n\n          <Grid item lg={12}>\n            <Paper>\n              {this.state.alertMessage === \"You made it!\" ? (\n                <Alert message={this.state.alertMessage} style={{ color: \"green\" }} />\n              ) : (\n                  <Alert message={this.state.alertMessage} style={{ color: \"red\" }} />\n                )}\n            </Paper>\n          </Grid>\n\n          <Grid container justify=\"space-between\">\n\n            <Grid item lg={6} md={6}>\n              <Paper>\n                <Score type=\"Score\" score={this.state.pickedChars.length} />\n              </Paper>\n            </Grid>\n\n            <Grid item lg={6} md={6}>\n              <Paper>\n                <Score type=\"Top Score\" score={this.state.topScore} />\n              </Paper>\n            </Grid>\n\n          </Grid>\n\n        </Grid>\n\n        <Grid container spacing={24} justify=\"center\" style={{ maxWidth: 945, margin: \"0 auto\" }}>\n          {this.state.characters.map(char => (\n            <Grid item lg={3} md={3} sm={4} xs={6}>\n            <CharacterCard\n              id={char.id}\n              name={char.name}\n              image={char.image}\n              key={char.id}\n              handlePicked={this.handlePicked}\n            />\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}